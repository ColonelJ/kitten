// Range of integers from start to finish generating
// based on a given next and compare functions
def rangeFor (int int (int -> int) (int int -> bool) -> [int]):
  -> start end next cmp;
  if (start end cmp apply):
    []
  else:
    start next apply
      end next cmp rangeFor
    start prepend

// Inclusive range
def rangeTo (int int -> [int]):
  -> start end;
  if (start < end):
    start end {(+ 1)} \> rangeFor
  else:
    start end {(- 1)} \< rangeFor

// Non-inclusive range
def rangeUntil (int int -> [int]):
  -> start end;
  if (start < end):
    start end {(+ 1)} \>= rangeFor
  else:
    start end {(- 1)} \<= rangeFor

// Operator alias for inclusive range.
def -- (int int -> [int]):
  rangeTo

def â€“ (int int -> [int]):
  (--)

// Operator alias for non-inclusive range.
def --- (int int -> [int]):
  rangeUntil

def â€” (int int -> [int]):
  (---)
