def (x f) dip:
  f apply x

def (xs x) append:
  xs x vec cat

def (x xs) prepend:
  x vec xs cat

def (xs f g) downtop:
  xs down f apply
  xs top g apply
  append

def (xs f g) bottomup:
  xs bottom f apply
  xs up g apply
  prepend

def (t x) when:
  t {} x if

def (f x) unless:
  {} f x if

def (xs f) map:
  { [] }
  { xs f {f map} bottomup }
  xs empty if
