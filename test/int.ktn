def unary (-> Int):
  1

def binary (-> Int Int):
  1 2

def ii ((Int -> Int) ->):
  -> f
  unary f __apply sayI

def iib ((Int Int -> Bool) ->):
  -> f
  binary f __apply sayB

def iii ((Int Int -> Int) ->):
  -> f
  binary f __apply sayI

`+ iii
`& iii
`-- ii
`/ iii
`= iib
`>= iib
`> iib
`++ ii
`<= iib
`< iib
`% iii
`* iii
`!= iib
`neg ii
`~ ii
`| iii
`- iii
`^ iii
