def test (a? (a -> [Char]) =>):
  -> { x show }
  if x isSome then:
    x fromSome show@ say
  else:
    "(none)" say

5 some {showInt} test
"meow" some {id} test
none {id} test

def or0 (Int? -> Int):
  0 fromOption

10 some or0 sayInt
none or0 sayInt

def /? (Int Int -> Int?):
  -> { x y }
  if y 0 = then: none else: x y / some

20 10 /? or0 sayInt
10 0 /? or0 sayInt
